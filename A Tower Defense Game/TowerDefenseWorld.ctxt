#BlueJ class context
comment0.target=TowerDefenseWorld
comment0.text=\r\n\ Proof-of-concept\ tower\ defense\ game\r\n\ Mouse\ controls\ only,\ point-and-click\ on\ towers\ on\ the\ tower\ UI\ then\ the\ canvas\r\n\ to\ buy+place\ towers\r\n\ Click\ towers\ which\ are\ already\ placed\ to\ upgrade\ them,\ use\ the\ back\ button\ to\ go\ back\ to\ the\ tower\ UI\r\n\ \r\n\ As\ (mostly)\ being\ a\ proof-of-concept,\ balance\ kinda\ sucks\ so\ feel\ free\ to\ mess\ with\ the\ numbers\ regarding\ balance\ (more\ specifically\ enemy\ spawns,\ values,\ and\ tower\ upgrade\ values)\r\n\ And\ there\ is\ only\ one\ tower\ due\ to\ each\ tower\ taking\ a\ tremendous\ amount\ of\ time\ to\ implement\r\n\ (Projectile\ behavior,\ upgrade\ UI,\ unique\ upgrades,\ specific\ UI\ elements,\ and\ more..)\r\n\ \r\n\ Known\ issue\:\r\n\ We\ use\ a\ class,\ ScheduledExecutorService,\ for\ anything\ time-based\r\n\ This\ includes\ everything\ such\ as\ tower\ attacks\ every\ x\ interval,\ enemy\ spawns\ every\ x\ interval,\ projectile\ despawns\ after\ x\ time,\ etc.\r\n\ Sometimes\ the\ game\ will\ just\ stop\ working\ and\ execution\ will\ continue\ indefinitely\ unless\ you\ terminate\ execution\ yourself\r\n\ I\ think\ this\ is\ due\ to\ a\ deadlock\ as\ a\ result\ of\ multiple\ queued\ tasks\ on\ one\ ScheduledExecutorService\ (?)\r\n\ I\ think\ I\ fixed\ it\ by\ giving\ each\ tower\ its\ own\ service,\ then\ using\ a\ global\ service\ for\ projectiles/enemy\ spawns\r\n\ If\ the\ issue\ occurs\ again,\ try\ increasing\ the\ corePoolSize\ of\ each\ service\ (the\ number\ argument\ of\ Executors.newScheduledThreadPool(n),\ found\ in\ this\ class,\r\n\ and\ also\ in\ Knight.class)\r\n\ \r\n\ @author\ (Hanz\ Badua)\ \r\n\ @version\ (19\ June\ 2023)\r\n
comment1.params=
comment1.target=TowerDefenseWorld()
comment10.params=
comment10.target=void\ clearUI()
comment11.params=
comment11.target=void\ goToMainMenu()
comment12.params=value\ size
comment12.target=void\ message(java.lang.String,\ int)
comment2.params=
comment2.target=void\ act()
comment3.params=
comment3.target=java.util.concurrent.ScheduledExecutorService\ getExecService()
comment4.params=
comment4.target=Navnode[]\ getCurrentNavnodeCollection()
comment5.params=
comment5.target=int\ getMoney()
comment6.params=m
comment6.target=void\ modifyMoney(int)
comment7.params=l
comment7.target=void\ modifyLives(int)
comment8.params=
comment8.target=void\ promptRestart()
comment9.params=
comment9.target=void\ initializeNavnodeCollections()
numComments=13
